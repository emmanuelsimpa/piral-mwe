{"version":3,"file":"main.05d378a9c58d5c878b28.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7DA","sources":["webpack://my-app/./src/index.tsx","webpack://my-app/./node_modules/piral-page-layouts/esm/actions.js","webpack://my-app/./node_modules/piral-page-layouts/esm/create.js","webpack://my-app/webpack/runtime/getFullHash"],"sourcesContent":["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { createInstance, Piral, createStandardApi } from \"piral\";\nimport { layout, errors } from \"./layout\";\nimport { createPageLayoutsApi } from \"piral-page-layouts\";\n\n// change to your feed URL here (either using feed.piral.cloud or your own service)\n// const feedUrl = 'https://feed.piral.cloud/api/v1/pilet/empty';\nconst feedUrl = \"https://feed.piral.cloud/api/v1/pilet/adiba_enterprise_portal\";\n\nconst instance = createInstance({\n  state: {\n    components: layout,\n    errorComponents: errors,\n  },\n  plugins: [...createStandardApi(), createPageLayoutsApi()],\n  requestPilets() {\n    return fetch(feedUrl)\n      .then((res) => res.json())\n      .then((res) => res.items);\n  },\n});\n\nconst root = createRoot(document.querySelector(\"#app\"));\n\nroot.render(<Piral instance={instance} />);\n","import { withKey, withoutKey } from 'piral-core';\nexport function registerPageLayout(ctx, name, value) {\n    ctx.dispatch((state) => (Object.assign(Object.assign({}, state), { registry: Object.assign(Object.assign({}, state.registry), { pageLayouts: withKey(state.registry.pageLayouts, name, value) }) })));\n}\nexport function unregisterPageLayout(ctx, name) {\n    ctx.dispatch((state) => (Object.assign(Object.assign({}, state), { registry: Object.assign(Object.assign({}, state.registry), { pageLayouts: withoutKey(state.registry.pageLayouts, name) }) })));\n}\n//# sourceMappingURL=actions.js.map","import * as actions from './actions';\nimport { createElement } from 'react';\nimport { withApi, defaultRender, useGlobalState } from 'piral-core';\nfunction getPageLayouts(items) {\n    const layouts = {};\n    if (items && typeof items === 'object') {\n        Object.keys(items).forEach((name) => {\n            layouts[name] = {\n                pilet: undefined,\n                component: items[name],\n            };\n        });\n    }\n    return layouts;\n}\nconst DefaultWrapper = (props) => defaultRender(props.children);\nfunction createPageWrapper(Wrapper = DefaultWrapper, fallback = 'default') {\n    return (props) => {\n        var _a;\n        const layout = ((_a = props.meta) === null || _a === void 0 ? void 0 : _a.layout) || fallback;\n        const registration = useGlobalState((s) => s.registry.pageLayouts[layout] || s.registry.pageLayouts[fallback]);\n        const Layout = (registration === null || registration === void 0 ? void 0 : registration.component) || DefaultWrapper;\n        return createElement(Layout, props, createElement(Wrapper, props));\n    };\n}\nfunction withPageLayouts(pageLayouts, fallback) {\n    return (state) => (Object.assign(Object.assign({}, state), { registry: Object.assign(Object.assign({}, state.registry), { wrappers: Object.assign(Object.assign({}, state.registry.wrappers), { page: createPageWrapper(state.registry.wrappers.page, fallback) }), pageLayouts }) }));\n}\n/**\n * Creates new Pilet API extensions for dealing with page layouts.\n */\nexport function createPageLayoutsApi(config = {}) {\n    const { layouts = {}, fallback } = config;\n    return (context) => {\n        const findPageLayout = (name) => context.readState((s) => s.registry.pageLayouts[name]);\n        context.defineActions(actions);\n        context.dispatch(withPageLayouts(getPageLayouts(layouts), fallback));\n        return (api) => {\n            const pilet = api.meta.name;\n            return {\n                registerPageLayout(name, pageLayout) {\n                    const current = findPageLayout(name);\n                    if (!current || current.pilet === pilet) {\n                        const component = withApi(context, pageLayout, api, 'pageLayout');\n                        context.registerPageLayout(name, {\n                            component,\n                            pilet,\n                        });\n                    }\n                    return () => api.unregisterPageLayout(name);\n                },\n                unregisterPageLayout(name) {\n                    const current = findPageLayout(name);\n                    if ((current === null || current === void 0 ? void 0 : current.pilet) === pilet) {\n                        context.unregisterPageLayout(name);\n                    }\n                },\n            };\n        };\n    };\n}\n//# sourceMappingURL=create.js.map","__webpack_require__.h = () => (\"f990a1ea3f4974790af5\")"],"names":[],"sourceRoot":""}