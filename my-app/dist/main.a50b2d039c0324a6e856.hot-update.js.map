{"version":3,"file":"main.a50b2d039c0324a6e856.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAEA;AACA;AAEA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;;;;;;;;ACpLA","sources":["webpack://my-app/./src/layout.tsx","webpack://my-app/webpack/runtime/getFullHash"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  ComponentsState,\n  ErrorComponentsState,\n  Menu,\n  Notifications,\n  SwitchErrorInfo,\n  MenuItemProps,\n} from \"piral\";\n\nconst MenuItem: React.FC<MenuItemProps> = ({ children }) => (\n  <li className='nav-item'>{children}</li>\n);\n\nconst defaultTiles = (\n  <>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://piral.io/'>Piral</a>\n        <br />\n        for next generation portals\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://www.typescriptlang.org/'>TypeScript</a>\n        <br />\n        for writing scalable web apps\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://reactjs.org/'>React</a>\n        <br />\n        for building components\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='http://getbootstrap.com/'>Bootstrap</a>\n        <br />\n        for layout and styling\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://sass-lang.com'>Sass</a>\n        <br />\n        for crafting custom styles\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://sass-lang.com'>Sass</a>\n        <br />\n        for crafting custom styles\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://sass-lang.com'>Sass</a>\n        <br />\n        for crafting custom styles\n      </div>\n    </div>\n    <div className='tile rows-2 cols-2'>\n      <div className='teaser'>\n        <a href='https://sass-lang.com'>Sass</a>\n        <br />\n        for crafting custom styles\n      </div>\n    </div>\n  </>\n);\n\n// pilet new /Users/Bosey/Dev/www/turog/piral-mwe/my-app/dist/emulator/my-app-1.0.0.tgz --target my-pilet\n\nconst defaultMenuItems = (\n  <>\n    <MenuItem type='general' meta={{}}>\n      <Link className='nav-link text-dark' to='/not-found'>\n        Not Found\n      </Link>\n    </MenuItem>\n  </>\n);\n\nexport const errors: Partial<ErrorComponentsState> = {\n  not_found: () => (\n    <div>\n      <p className='error'>\n        Could not find the requested page. Are you sure it exists?\n      </p>\n      <p>\n        Go back <Link to='/'>to the dashboard</Link>.\n      </p>\n    </div>\n  ),\n};\n\nexport const layout: Partial<ComponentsState> = {\n  ErrorInfo: (props) => (\n    <div>\n      <h1>Error</h1>\n      <SwitchErrorInfo {...props} />\n    </div>\n  ),\n  DashboardContainer: ({ children }) => (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>Welcome to your new microfrontend app shell, built with:</p>\n      <Link to='/dashboard'>Click to redirect to different Layout</Link>\n      <div className='tiles'>\n        {/* {defaultTiles} */}\n        {children}\n      </div>\n    </div>\n  ),\n  DashboardTile: ({ columns, rows, children }) => (\n    <div className={`tile cols-${columns} rows-${rows}`}>{children}</div>\n  ),\n  Layout: ({ children }) => (\n    <div>\n      <Notifications />\n      <Menu type='general' />\n      <div className='container'>{children}</div>\n    </div>\n  ),\n  MenuContainer: ({ children }) => {\n    const [collapsed, setCollapsed] = React.useState(true);\n    return (\n      <header>\n        <nav className='navbar navbar-light navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3'>\n          <div className='container'>\n            <Link className='navbar-brand' to='/'>\n              Piral\n            </Link>\n            <Link className='navbar-brand' to='/dashboard'>\n              dashboard\n            </Link>\n            <button\n              aria-label='Toggle navigation'\n              type='button'\n              onClick={() => setCollapsed(!collapsed)}\n              className='navbar-toggler mr-2'\n            >\n              <span className='navbar-toggler-icon' />\n            </button>\n            <div\n              className={`collapse navbar-collapse d-sm-inline-flex flex-sm-row-reverse ${\n                collapsed ? \"\" : \"show\"\n              }`}\n              aria-expanded={!collapsed}\n            >\n              <ul className='navbar-nav flex-grow'>\n                {children}\n                {defaultMenuItems}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n    );\n  },\n  MenuItem,\n  NotificationsHost: ({ children }) => (\n    <div className='notifications'>{children}</div>\n  ),\n  NotificationsToast: ({ options, onClose, children }) => (\n    <div className={`notification-toast ${options.type}`}>\n      <div className='notification-toast-details'>\n        {options.title && (\n          <div className='notification-toast-title'>{options.title}</div>\n        )}\n        <div className='notification-toast-description'>{children}</div>\n      </div>\n      <div className='notification-toast-close' onClick={onClose} />\n    </div>\n  ),\n};\n","__webpack_require__.h = () => (\"df0f91c08650fd4e2d60\")"],"names":[],"sourceRoot":""}